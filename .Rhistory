crsp_daily <- readRDS("C:/Users/Alex/Desktop/Alex/Toulouse School of Economics/Semester 3/Scoring/Project/data_given/wrds_data/crsp_daily_light.rds")
# crsp_daily <- readRDS("./wrds_data/crsp_daily.rds") # uncomment for full
# # The data has been previously collected this way:
# # Setting the analysis horizon
# start_date <- lubridate::ymd("1960-01-01")
# end_date <- lubridate::ymd("2024-09-30")
#
# # CRSP daily
#
# # CRSP monthly daily file (v2 format)
# dsf_db <- tbl(wrds, I("crsp.dsf_v2"))
# # identifying information
# stksecurityinfohist_db <- tbl(wrds, I("crsp.stksecurityinfohist"))
#
# permnos <- stksecurityinfohist_db %>%
#   distinct(permno) %>%
#   pull(permno)
#
# batch_size <- 500
# batches <- ceiling(length(permnos) / batch_size)
#
#
# for (j in 1:batches) {
#     print(j)
#     permno_batch <- permnos[
#     ((j - 1) * batch_size + 1):min(j * batch_size, length(permnos))
#     ]
#
#     crsp_daily_sub <- dsf_db %>%
#     filter(permno %in% permno_batch) %>%
#     filter(dlycaldt >= start_date & dlycaldt <= end_date) %>%
#     inner_join(
#       stksecurityinfohist_db %>%
#         filter(sharetype == "NS" &
#                 securitytype == "EQTY" &
#                 securitysubtype == "COM" &
#                 usincflg == "Y" &
#                 issuertype %in% c("ACOR", "CORP") &
#                 primaryexch %in% c("N", "A", "Q") &
#                 conditionaltype %in% c("RW", "NW") &
#                 tradingstatusflg == "A") %>%
#         select(permno, secinfostartdt, secinfoenddt),
#       join_by(permno)
#     ) %>%
#     filter(dlycaldt >= secinfostartdt & dlycaldt <= secinfoenddt)  %>%
#     select(permno,
#            cusip = hdrcusip,
#            date = dlycaldt,
#            vol = dlyvol,
#            shrout,
#            prc = dlyprc,
#            cap = dlycap,
#            close = dlyclose,
#            low = dlylow,
#            high = dlyhigh,
#            bid = dlybid,
#            ask = dlyask,
#            open = dlyopen,
#            ret = dlyret) %>%
#     collect() %>%
#     drop_na()
#
#     if (nrow(crsp_daily_sub) > 0) {
#         dbWriteTable(tidy_finance,
#                      "crsp_daily",
#                      value = crsp_daily_sub,
#                      overwrite = ifelse(j == 1, TRUE, FALSE),
#                      append = ifelse(j != 1, TRUE, FALSE)
#         )
#     }
#
#     message("Batch ", j, " out of ", batches, " done (", percent(j / batches), ")\n")
# }
#
# crsp_daily_db <- tbl(tidy_finance, "crsp_daily")
#
# crsp_daily <- crsp_daily_db %>% collect()
# saveRDS(crsp_daily, "./wrds_data/crsp_daily.rds")
# usual_suspects <- 'APPLE INC|ENRON CORP$|WORLDCOM|GENERAL MOTORS|CHRYSLER|TEXACO|CALPINE|EASTMAN KODAK'
# comp_sub <- company_all %>% filter(grepl(usual_suspects, conm))
# subset_mapping <- ccmxpf_linktable %>%
#   filter(gvkey %in% unique(comp_sub$gvkey)) %>%
#   left_join(company_all %>% select(gvkey, conm), by = c("gvkey"))
#
# crsp_daily_light <- crsp_daily %>%
#   left_join(subset_mapping, by = c("permno"), relationship = "many-to-many") %>%
#     filter(!is.na(gvkey) &
#            (date >= linkdt & date <= linkenddt))
#
# saveRDS(crsp_daily_light, "./wrds_data/crsp_daily_light.rds")
#| code-fold: show
ccmxpf_linktable_db <- tbl(
wrds,
in_schema("crsp", "ccmxpf_linktable")
)
ccmxpf_linktable <- ccmxpf_linktable_db %>%
filter(linktype %in% c("LU", "LC") &
linkprim %in% c("P", "C") &
usedflag == 1) %>%
select(permno = lpermno, gvkey, linkdt, linkenddt) %>%
collect() %>%
mutate(linkenddt = replace_na(linkenddt, today()))
#| code-fold: show
acc <- funda_db %>%
filter(grepl('^APPLE INC|ENRON CORP$|EASTMAN KODAK', conm)) %>%
select(gvkey, fyear, conm, at, wcap, re, ebit, lt, sale) %>%
mutate(WCTA = wcap / at,
RETA = re / at,
EBTA = ebit / at,
TLTA  = lt / at, # as a proxy for ME/TL
SLTA = sale / at) %>%
collect()
acc
view(acc)
#| code-fold: show
(subset_mapping <- ccmxpf_linktable %>%
filter(gvkey %in% unique(acc$gvkey)) %>%
left_join(company_all %>% select(gvkey, conm), by = c("gvkey")))
view(subset_mapping)
#| code-fold: show
merged_crsp_compustat_sub <- crsp_daily %>%
select(cusip, permno, date, prc, vol, shrout, bid, ask) %>%
left_join(subset_mapping, by = c("permno"), relationship = "many-to-many") %>%
filter(!is.na(gvkey) &
(date >= linkdt & date <= linkenddt))
view(merged_crsp_compustat_sub)
#| code-fold: show
ggplot(merged_crsp_compustat_sub,
aes(x=date, y=prc*shrout*1000, color=conm)) +
geom_line() +
scale_y_log10(breaks = log_breaks(4, 1000),
labels = scales::label_dollar(scale_cut = cut_short_scale()))
View(compustat_all)
View(compustat_all)
View(CRSP_5)
View(company_all)
library(tidyverse)
library(tidyfinance)
library(scales)
library(RSQLite)
library(dbplyr)
library(RPostgres)
# Load downloaded dat
compustat <- readRDS('C:/Users/Alex/Desktop/Alex/Toulouse School of Economics/Semester 3/Scoring/Project/data/campustat.rds')
glimpse(compustat)
head(compustat)
# we only keep the following companies for now
# 001690	AAPL
# 005073	GM
# 006066	IBM
# 012141	MSFT
# 006127	ENRNQ
df_5 <- compustat |>
filter(
gvkey == "001690"|
gvkey == "005073"|
gvkey == "006066"|
gvkey == "012141"|
gvkey == "006127"
)
glimpse(df_5)
#save trimmed df
saveRDS(df_5, "C:/Users/Alex/Desktop/Alex/Toulouse School of Economics/Semester 3/Scoring/Project/data/campustat_5.rds")
df_5 <- readRDS('C:/Users/Alex/Desktop/Alex/Toulouse School of Economics/Semester 3/Scoring/Project/data/campustat_5.rds')
CRSP_daily_light <- readRDS('C:/Users/Alex/Desktop/Alex/Toulouse School of Economics/Semester 3/Scoring/Project/data/crsp_daily_light.rds')
glimpse(CRSP_daily_light)
head(CRSP_daily_light)
CRSP_5 <- CRSP_daily_light |>
filter(
gvkey == "001690"|
gvkey == "005073"|
gvkey == "006066"|
gvkey == "012141"|
gvkey == "006127"
)
glimpse(CRSP_5)
# Creating link
wrds <- dbConnect(
Postgres(),
host = "wrds-pgdata.wharton.upenn.edu",
dbname = "wrds",
port = 9737,
sslmode = "require",
user = "alexanderkoehle",
password = "hDZa#aQ4cB7fZ.z"
)
# The data has been previously collected this way:
funda_db <- tbl(wrds, in_schema("comp", "funda"))
# Setting the analysis horizon
start_date <- lubridate::ymd("1960-01-01")
end_date <- lubridate::ymd("2023-06-30")
#| code-fold: show
ccmxpf_linktable_db <- tbl(
wrds,
in_schema("crsp", "ccmxpf_linktable")
)
ccmxpf_linktable <- ccmxpf_linktable_db %>%
filter(linktype %in% c("LU", "LC") &
linkprim %in% c("P", "C") &
usedflag == 1) %>%
select(permno = lpermno, gvkey, linkdt, linkenddt) %>%
collect() %>%
mutate(linkenddt = replace_na(linkenddt, today()))
# for only the 5 companies specified
#We then select three particular companies from Compustat:
#| code-fold: show
acc <- funda_db %>%
filter(grepl('^APPLE INC|ENRON CORP$|EASTMAN KODAK|GENERAL MOTORS CO|ENRON CORP'
, conm)) %>%
select(gvkey, fyear, conm, at, wcap, re, ebit, lt, sale) %>%
mutate(WCTA = wcap / at,
RETA = re / at,
EBTA = ebit / at,
TLTA  = lt / at, # as a proxy for ME/TL
SLTA = sale / at) %>%
collect()
acc
#| code-fold: show
(subset_mapping <- ccmxpf_linktable %>%
filter(gvkey %in% unique(acc$gvkey)) %>%
left_join(df_5 %>% by = c("gvkey")))
df_5
#| code-fold: show
(subset_mapping <- ccmxpf_linktable %>%
filter(gvkey %in% unique(acc$gvkey)) %>%
left_join(df_5, by = c("gvkey")))
view(subset_mapping)
merged_crsp_compustat_sub <- CRSP_5 %>%
select(cusip, permno, date, prc, vol, shrout, bid, ask) %>%
left_join(subset_mapping, by = c("permno"), relationship = "many-to-many") %>%
filter(!is.na(gvkey) &
(date >= linkdt & date <= linkenddt))
view(merged_crsp_compustat_sub)
merged_crsp_compustat_sub_1 <- merged_crsp_compustat_sub %>%
filter(date >= datadate & date < datadate + years(1))
view(merged_crsp_compustat_sub_1)
merged_crsp_compustat_sub <- merged_crsp_compustat_sub %>%
filter(date >= datadate & date < datadate + years(1))
rm(merged_crsp_compustat_sub_1)
view(merged_crsp_compustat_sub)
#| code-fold: show
lopucki <- readxl::read_xlsx(
"C:/Users/Alex/Desktop/Alex/Toulouse School of Economics/Semester 3/Scoring/Project/data_given/default_data/Bankruptcy - LoPucki/Florida-UCLA-LoPucki Bankruptcy Research Database 1-12-2023.xlsx")
# Some companies fill multiple time (eg American Apparel)
lopucki %>%
group_by(GvkeyBefore) %>%
mutate(n=n()) %>%
ungroup() %>%
filter(n>1)
#| code-fold: show
# Extract Chapter 7/11
# When multiple filings for a company (ie gvkey) you can select the min date (bankruptcy filings sometimes occur multiple times spanning up to a 10 year period)
lopucki_clean <- lopucki %>%
select(NameCorp, Chapter, GvkeyBefore, DateFiled) %>%
filter(Chapter %in% c('7', '11')) %>%
group_by(GvkeyBefore) %>%
summarize(DateFiled = min(DateFiled),
NameCorp = NameCorp[which.min(DateFiled)],
Chapter = Chapter[which.min(DateFiled)]) %>%
mutate(DateFiled = lubridate::as_date(DateFiled)) %>%
ungroup()
#| code-fold: show
gvkey_enron <- merged_crsp_compustat_sub %>% filter(conm == 'ENRON CORP') %>% pull(gvkey)
view(lopicki_clean)
view(lopucki_clean)
#| code-fold: show
gvkey_merged <- merged_crsp_compustat_sub %>% pull(gvkey)
lopucki_clean %>% filter(GvkeyBefore == gvkey_merged)
head(gvkey_merged)
#| code-fold: show
gvkey_merged <- merged_crsp_compustat_sub %>% pull(gvkey) |> unique()
lopucki_clean %>% filter(GvkeyBefore == gvkey_merged)
gvkey_merged
lopucki_clean %>% filter(GvkeyBefore == "006127")
#| code-fold: show
gvkey_merged <- merged_crsp_compustat_sub %>% pull(gvkey) |> unique()
lopucki_clean %>% filter(GvkeyBefore %in% gvkey_merged)
#| code-fold: show
merged_crsp_compustat_sub %>% filter(gvkey %in% gvkey_merged) %>% select(conm, dldte, dlrsn)
#| code-fold: show
merged_crsp_compustat_sub %>% filter(gvkey %in% gvkey_merged) %>% select(gvkey, tic, dldte, dlrsn)
#| code-fold: show
merged_crsp_compustat_sub %>% filter(gvkey %in% gvkey_merged) %>% select(gvkey, tic)
# additionally need , dldte, dlrsn in the database / campustat
#| code-fold: show
merged_crsp_compustat_sub %>% filter(gvkey %in% gvkey_merged) %>% select(gvkey, tic) |> unique()
# additionally need , dldte, dlrsn in the database / campustat
#| code-fold: show
gvkey_defaulted -> lopucki_clean |> pull(GvkeyBefore)
#| code-fold: show
gvkey_defaulted <- lopucki_clean |> pull(GvkeyBefore)
merged_crsp_compustat_sub %>% filter(gvkey %in% gvkey_defaulted) %>% select(gvkey, tic) |> unique()
# additionally need , dldte, dlrsn in the database / campustat
view(df_5)
?rename
#| code-fold: show
# lopucki_clean
# merged_crsp_compustat_sub
# renaming gvkey_before in lopucki for merge
lopucki_clean <- lopucki_clean |> rename(gvkey = GvkeyBefore)
df_merged <- merged_crsp_compustat_sub %>%
left_join(lopucki_clean, by = c("gvkey"), relationship = "many-to-many")
head(df_merged)
view(df_merged)
df_merged |>
mutate(
date = as.Date(date),
DateFiled = as.Date(DateFiled)
)
# Step 1: Extract the year from 'date' and 'DateFiled'
df_merged <- df_merged %>%
mutate(
year_date = year(date),
year_filed = year(DateFiled)
) |>
mutate(Y = ifelse(year_date == year_filed - 1, 1, 0))
view(df_merged)
df_merged_1 <- df_merged |>
filter(is.na(DateFiled) | date <= DateFiled + years(1))
# df_merged <- df_merged %>%
#   select(-year_date, -year_filed)
view(df_merged_1)
df_merged <- df_merged |>
filter(is.na(DateFiled) | date <= DateFiled )
head(df_merged)
view(df_merged)
df_merged <- df_merged |>
filter(is.na(DateFiled) | date <= DateFiled ) |>
filter(year_date == year_filed) #filter out when year_date == year_filed
head(df_merged)
view(df_merged)
#| code-fold: show
# lopucki_clean
# merged_crsp_compustat_sub
# renaming gvkey_before in lopucki for merge
lopucki_clean <- lopucki_clean |> rename(gvkey = GvkeyBefore)
df_merged <- merged_crsp_compustat_sub %>%
left_join(lopucki_clean, by = c("gvkey"), relationship = "many-to-many")
head(df_merged)
df_merged |>
mutate(
date = as.Date(date),
DateFiled = as.Date(DateFiled)
)
# Step 1: Extract the year from 'date' and 'DateFiled'
df_merged <- df_merged %>%
mutate(
year_date = year(date),
year_filed = year(DateFiled)
) |>
mutate(Y = ifelse(year_date == year_filed - 1, 1, 0))
df_merged <- df_merged |>
filter(is.na(DateFiled) | date <= DateFiled ) |>
filter(year_date != year_filed) #filter out when year_date == year_filed
head(df_merged)
view(df_merged)
df_merged <- merged_crsp_compustat_sub %>%
left_join(lopucki_clean, by = c("gvkey"), relationship = "many-to-many")
head(df_merged)
df_merged |>
mutate(
date = as.Date(date),
DateFiled = as.Date(DateFiled)
)
# Step 1: Extract the year from 'date' and 'DateFiled'
df_merged <- df_merged %>%
mutate(
year_date = year(date),
year_filed = year(DateFiled)
) |>
mutate(Y = ifelse(year_date == year_filed - 1, 1, 0))
df_merged <- df_merged |>
filter(is.na(DateFiled) | date <= DateFiled ) |>
filter(is.na(DateFiled) | year_date != year_filed) #filter out when year_date == year_filed
head(df_merged)
view(df_merged)
# Load downloaded dat
compustat <- readRDS('../data/compustat_all_light.rds')
library(tidyverse)
library(tidyfinance)
library(scales)
library(RSQLite)
library(dbplyr)
library(RPostgres)
# Load downloaded dat
compustat <- readRDS('../data/compustat_all_light.rds')
glimpse(compustat)
head(compustat)
library(tidyverse)
library(tidyfinance)
library(scales)
library(RSQLite)
library(dbplyr)
library(RPostgres)
# Load downloaded dat
compustat <- readRDS('../data/compustat_all_light.rds')
glimpse(compustat)
head(compustat)
# we only keep the following companies for now
# 001690	AAPL
# 005073	GM
# 006066	IBM
# 012141	MSFT
# 006127	ENRNQ
# filter(
#     gvkey == "001690"|
#     gvkey == "005073"|
#     gvkey == "006066"|
#     gvkey == "012141"|
#     gvkey == "006127"
# )
df_5 <- compustat
glimpse(df_5)
#save trimmed df
saveRDS(df_5, "../data/campustat_5.rds")
df_5 <- readRDS('../data/campustat_5.rds')
CRSP_daily_light <- readRDS('../data/crsp_daily_light.rds')
glimpse(CRSP_daily_light)
head(CRSP_daily_light)
CRSP_5 <- CRSP_daily_light
glimpse(CRSP_5)
# Creating link
wrds <- dbConnect(
Postgres(),
host = "wrds-pgdata.wharton.upenn.edu",
dbname = "wrds",
port = 9737,
sslmode = "require",
user = "alexanderkoehle",
password = "hDZa#aQ4cB7fZ.z"
)
# The data has been previously collected this way:
funda_db <- tbl(wrds, in_schema("comp", "funda"))
# Setting the analysis horizon
start_date <- lubridate::ymd("1960-01-01")
end_date <- lubridate::ymd("2023-06-30")
#| code-fold: show
ccmxpf_linktable_db <- tbl(
wrds,
in_schema("crsp", "ccmxpf_linktable")
)
ccmxpf_linktable <- ccmxpf_linktable_db %>%
filter(linktype %in% c("LU", "LC") &
linkprim %in% c("P", "C") &
usedflag == 1) %>%
select(permno = lpermno, gvkey, linkdt, linkenddt) %>%
collect() %>%
mutate(linkenddt = replace_na(linkenddt, today()))
# for only the 5 companies specified
#We then select three particular companies from Compustat:
#| code-fold: show
acc <- funda_db %>%
filter(grepl('^APPLE INC|ENRON CORP$|EASTMAN KODAK|GENERAL MOTORS CO'
, conm)) %>%
select(gvkey, fyear, fdate, conm, at, wcap, re, ebit, lt, sale, dldte, dlrsn) %>%
mutate(WCTA = wcap / at,
RETA = re / at,
EBTA = ebit / at,
TLTA  = lt / at, # as a proxy for ME/TL
SLTA = sale / at) %>%
collect()
#| code-fold: show
ccmxpf_linktable_db <- tbl(
wrds,
in_schema("crsp", "ccmxpf_linktable")
)
ccmxpf_linktable <- ccmxpf_linktable_db %>%
filter(linktype %in% c("LU", "LC") &
linkprim %in% c("P", "C") &
usedflag == 1) %>%
select(permno = lpermno, gvkey, linkdt, linkenddt) %>%
collect() %>%
mutate(linkenddt = replace_na(linkenddt, today()))
# for only the 5 companies specified
#We then select three particular companies from Compustat:
#| code-fold: show
acc <- funda_db %>%
filter(grepl('^APPLE INC|ENRON CORP$|EASTMAN KODAK|GENERAL MOTORS CO'
, conm)) %>%
select(gvkey, fyear, fdate, conm, at, wcap, re, ebit, lt, sale, dlrsn) %>%
mutate(WCTA = wcap / at,
RETA = re / at,
EBTA = ebit / at,
TLTA  = lt / at, # as a proxy for ME/TL
SLTA = sale / at) %>%
collect()
#| code-fold: show
ccmxpf_linktable_db <- tbl(
wrds,
in_schema("crsp", "ccmxpf_linktable")
)
ccmxpf_linktable <- ccmxpf_linktable_db %>%
filter(linktype %in% c("LU", "LC") &
linkprim %in% c("P", "C") &
usedflag == 1) %>%
select(permno = lpermno, gvkey, linkdt, linkenddt) %>%
collect() %>%
mutate(linkenddt = replace_na(linkenddt, today()))
# for only the 5 companies specified
#We then select three particular companies from Compustat:
#| code-fold: show
acc <- funda_db %>%
filter(grepl('^APPLE INC|ENRON CORP$|EASTMAN KODAK|GENERAL MOTORS CO'
, conm)) %>%
select(gvkey, fyear, fdate, conm, at, wcap, re, ebit, lt, sale) %>%
mutate(WCTA = wcap / at,
RETA = re / at,
EBTA = ebit / at,
TLTA  = lt / at, # as a proxy for ME/TL
SLTA = sale / at) %>%
collect()
acc
